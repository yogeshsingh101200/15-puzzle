{"version":3,"sources":["index.js"],"names":["findBlank","squares","i","length","setupBoard","Array","fill","forEach","val","idx","r","Math","floor","random","shuffle","inversions","blank","row","j","isSolvable","calculateWinner","Square","props","value","correct","className","onClick","Board","state","moves","seconds","this","slice","timerId","setInterval","setState","includes","abs","clearInterval","console","log","handleClick","status","renderSquare","reset","React","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6d56d56.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nfunction findBlank(squares) {\n    for (let i = 0; i < squares.length; ++i) {\n        if (!squares[i]) return i;\n    }\n}\n\nfunction isSolvable(squares) {\n    let inversions = 0;\n    let blank = findBlank(squares);\n    let row = (blank - blank % 4) / 4;\n    for (let i = 0; i < squares.length - 1; ++i) {\n        for (let j = i + 1; j < squares.length; ++j) {\n            // j > i\n            if (squares[i] && squares[j] && squares[i] > squares[j]) ++inversions;\n        }\n    }\n    // Since grid width is even\n    if (((row ^ inversions) & 1) === 1) return true; // checks for opposite polarity\n    return false;\n}\n\nfunction shuffle(squares) {\n    for (let i = 0; i < squares.length; ++i) {\n        let r = Math.floor(Math.random() * (i + 1));\n        [squares[i], squares[r]] = [squares[r], squares[i]];\n    }\n    return squares;\n}\n\nfunction setupBoard() {\n    let squares = Array(16).fill(0);\n    squares.forEach((val, idx) => {\n        squares[idx] = idx ? idx : null;\n    });\n    shuffle(squares);\n    if (!isSolvable(squares)) {\n        if (squares[0] && squares[1]) {\n            [squares[0], squares[1]] = [squares[1], squares[0]];\n        } else {\n            [squares[2], squares[3]] = [squares[3], squares[2]];\n        }\n    }\n    return squares;\n}\n\nfunction calculateWinner(squares) {\n    for (let i = 0; i < squares.length; ++i) {\n        if (squares[i] && squares[i] !== (i + 1)) return false;\n    }\n    return true;\n}\n\n\nfunction Square(props) {\n    if (!props.value && !props.correct) {\n        return (\n            <button\n                className=\"square btn btn-primary\"\n                onClick={props.onClick}\n            >\n                {props.value}\n            </button>\n        );\n    } else if (props.correct) {\n        return (\n            <button\n                className=\"square btn btn-secondary\"\n                onClick={props.onClick}\n            >\n                {props.value}\n            </button>\n        );\n    } else {\n        return (\n            <button\n                className=\"square btn btn-dark\"\n                onClick={props.onClick}\n            >\n                {props.value}\n            </button>\n        );\n    }\n}\n\nclass Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: setupBoard(),\n            moves: 0,\n            seconds: 0\n        };\n    }\n\n    handleClick(i) {\n        if (calculateWinner(this.state.squares)) return;\n        const squares = this.state.squares.slice();\n        let blank = findBlank(squares);\n        if (blank === i) return;\n\n        if (this.state.moves === 0) {\n            this.timerId = setInterval(() => {\n                this.setState(state => ({\n                    seconds: state.seconds + 1\n                }));\n            }, 1000);\n        }\n\n        let places = [-1, 1, -4, 4];\n        if (places.includes(Math.abs(blank - i))) {\n\n            [squares[i], squares[blank]] = [squares[blank], squares[i]];\n\n            this.setState(state => ({\n                squares: squares,\n                moves: state.moves + 1\n            }));\n        }\n    }\n\n\n    reset() {\n        this.setState({\n            squares: setupBoard(),\n            moves: 0,\n            seconds: 0\n        });\n        if (this.timerId) {\n            clearInterval(this.timerId);\n        }\n    }\n\n\n    renderSquare(i) {\n        if ((this.state.squares[i] === i + 1) || (!this.state.squares[i] && i === 15)) {\n            console.log(\"hello\");\n            return (\n                <Square\n                    value={this.state.squares[i]}\n                    correct={true}\n                    onClick={() => { this.handleClick(i); }}\n                />);\n        } else {\n            return (\n                <Square\n                    value={this.state.squares[i]}\n                    correct={false}\n                    onClick={() => { this.handleClick(i); }}\n                />);\n        }\n    }\n\n    render() {\n        let status = <div className=\"status\">Game on</div>;\n\n        if (calculateWinner(this.state.squares)) {\n            status = <div className=\"status win\">You Won</div>;\n            clearInterval(this.timerId);\n        }\n\n        return (\n            <div>\n                {status}\n                <div className=\"info\">\n                    <div className=\"timer\">Time: {this.state.seconds}s</div>\n                    <div className=\"moves\">Moves: {this.state.moves}</div>\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                    {this.renderSquare(3)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(8)}\n                    {this.renderSquare(9)}\n                    {this.renderSquare(10)}\n                    {this.renderSquare(11)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(12)}\n                    {this.renderSquare(13)}\n                    {this.renderSquare(14)}\n                    {this.renderSquare(15)}\n                </div>\n                <div className=\"option\">\n                    <button\n                        className=\"btn btn-danger btn-block\"\n                        onClick={() => { this.reset(); }}\n                    >Restart</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction Game() {\n    return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n                <Board />\n            </div>\n        </div>\n    );\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}